version: 2.1
# Use a package of configuration called an orb.
orbs:
    aws-cli: circleci/aws-cli@3.1
# Reusable section 
commands:
      # Exercise - Rollback
  destroy_environment:
    steps:
      - run:
          name: Destroy environment
          # ${CIRCLE_WORKFLOW_ID} is a Built-in environment variable 
          # ${CIRCLE_WORKFLOW_ID:0:5} takes the first 5 chars of the variable CIRCLE_CI_WORKFLOW_ID 
          when: on_fail
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}

# Define the jobs we want to run for this project
jobs:
    hello-world:  # Choose any name, such as `build`
        # The primary container, where your job's commands will run
      docker:
        - image: circleci/node:13.8.0
      steps:
        - checkout # check out the code in the project directory
        - run: echo "hello world" # run the `echo` command

    # Exercise: Infrastructure Creation
    create_infrastructure:  
    # The primary container, where your job's commands will run
      executor: aws-cli/default
      steps:
        - checkout # check out the code in the project directory
        - aws-cli/setup:
            aws-access-key-id: AWS_ACCESS_KEY
            aws-secret-access-key: AWS_ACCESS_SECRET
            aws-region: AWS_REGION_NAME
        - run: 
            name: Create Cloudformation Stack
            command: aws cloudformation deploy --template-file template.yml
              --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5}
              --region us-east-1
        - run: return 1
        - destroy_environment
    # Exercise: Config and Deploy
    # configure_infrastructure: 
    #     docker:
    #       - image: python:3.10.12-alpine3.18
    #     steps:
    #       - checkout
    #       - add_ssh_keys:
    #           # You can get this ID in the section where you registered the SSH Key
    #             fingerprints: ["21:75:14:4e:9c:a9:67:b4:18:62:37:e8:5a:bd:9c:51"] 
    #       - run:
    #           name: Install Ansible
    #           command: |
    #             apk add --update ansible
    #       - run:
    #           name: Run Playbook and Configure server
    #           command: |
    #             ansible-playbook -i inventory main-remote.yml

    # Exercise: Smoke Testing
    smoke_test:
      docker:
        - image: alpine:latest
      when: always
      steps:
        - run: apk add --update curl
        - run:
            name: smoke test
            command: |
              URL="https://blog.udacity.com/"
              # Test if website exists
              if curl -s --head ${URL} 
              then
                echo "Successful"
                return 0
              else
                echo "UnSuccessful"
                return 1
              fi

# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - hello-world
      - create_infrastructure
      # - configure_infrastructure
      - smoke_test:
          requires:
            - create_infrastructure